<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="12.2">
  <zoom_level>8</zoom_level>
  <element>
    <type>com.umlet.element.Note</type>
    <coordinates>
      <x>1120</x>
      <y>16</y>
      <w>232</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>Notes:
 
* cv: refers to  OpenCV 3.x
* gm: OpenGM 2.x
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>16</x>
      <y>832</y>
      <w>280</w>
      <h>296</h>
    </coordinates>
    <panel_attributes>Skeleton
--
+name: string
+partTree: tree&lt;BodyPart&gt;
+jointTree: tree&lt;BodyJoint&gt;
+scale: float
--
+Skeleton()
+getName(): string
+setName(_name: string)
+getPartTree(): tree&lt;BodyPart&gt;
+setPartTree(_partTree: tree&lt;BodyPart&gt;)
+getJointTree(): tree&lt;JointTree&gt;
+setJointTree(_jointTree: tree&lt;BodyJoint&gt;)
+getScale(): float
+setScale(_scale: float)
+toString(): string
+learnDepth(skel: Skeleton&amp;)
+infer2D()
+operator=: Skeleton&amp;
+operator==: bool
+operator!=: bool
+getPartTreeCount(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1256</x>
      <y>1584</y>
      <w>424</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>SurfDetector
--

--
+getId(): int
+setId(int _id) 
+train(frames: vector&lt;Frame&gt;, params: map&lt;string, float&gt;)
+detect(frame: Frame*, params: map&lt;string, float&gt;): vector&lt;vector&lt;LimbLabel&gt; &gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1696</x>
      <y>1584</y>
      <w>416</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>HogDetector
--

--
+getId(): int
+setId(int _id) 
+train(frames: vector&lt;Frame&gt;, params: map&lt;string, float&gt;)
+detect(frame: Frame*, params: map&lt;string, float&gt;): vector&lt;vector&lt;LimbLabel&gt; &gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1232</x>
      <y>1120</y>
      <w>456</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>/Detector/
--
-id: int
-model: &lt;T&gt;
--
/+getId(): int/
/+setId(int _id)/
/+train(frames: vector&lt;Frame&gt;, params: map&lt;string, float&gt;)/
/+detect(frame: Frame*, params: map&lt;string, float&gt;): vector&lt;vector&lt;LimbLabel&gt; &gt;/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>80</x>
      <y>248</y>
      <w>392</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>/Solver/
--
-id: int
-name: string
--
/+Solver()/
/+solve(frames: vector&lt;Frame&gt;): Solution/
/+solve(frames: vector&lt;Frame&gt;, params: vector&lt;float&gt;): Solution/
+getName(): string
+getId(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>512</x>
      <y>224</y>
      <w>344</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>Sequence
--
-id: int
-name: string
-frames: vector&lt;Frame*&gt;
--
+Sequence()
+Sequence(id: int, name: string, frames: vector&lt;Frame*&gt;)
+getId(): int
+setId(id: int)
+getName(): string
+setName(name: string)
+getFrames(): vector&lt;Frame*&gt;
+setFrames(frames: vector&lt;Frame*&gt;)
+operator=: Sequence&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>8</x>
      <y>416</y>
      <w>152</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>NSKPSolver
--

--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>360</x>
      <y>416</y>
      <w>152</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>Solver3
--

--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>184</x>
      <y>416</y>
      <w>152</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>TLPSSolver
--

--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>64</x>
      <y>344</y>
      <w>208</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>192;24;24;72</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>240</x>
      <y>344</y>
      <w>40</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>24;24;24;72</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>256</x>
      <y>344</y>
      <w>192</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>24;24;176;72</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>552</x>
      <y>24</y>
      <w>264</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>Solvlet
--
-frameId: int
-labels: vector&lt;LimbLabel&gt;
--
+Solvlet()
+Solvlet(id: int, labels: vector&lt;LimbLabel&gt;)
+getFrameId(): int
+setFrameId(id: int)
+setLables(labels: vector&lt;LimbLabel&gt;)
+getLabels(): vector&lt;LimbLabel&gt;
+toSkeleton(scale: float): Skeleton
+operator=: Solvlet&amp;
+operator==: bool
+operator!=: bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>8</x>
      <y>32</y>
      <w>496</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>Solution
--
-id: int
-sequenceId: int
-solverId: int
-solverParams: vector&lt;float&gt;
-solvlets: vector&lt;Solvlet&gt;
--
+Solution()
+Solution(id: int, solverId: int, seqId: int, params: vector&lt;float&gt;, sol: vector&lt;Solvlet&gt;)
+getId(): int
+setId(id: int)
+getSolvlets(): vector&lt;Solvletl&gt;
+setSolvlets(labels: vector&lt;Solvlet&gt;)

+operator=: Solution&amp;
+operator==: bool
+operator!=: bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Package</type>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>968</w>
      <h>520</h>
    </coordinates>
    <panel_attributes>Solving
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>416</x>
      <y>528</y>
      <w>560</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>MinSpanningTree
--
mst: tree&lt;int&gt;
--
MinSpanningTree()
MinSpanningTree(mst: MinSpanningTree&amp;)
MinSpanningTree(ism: const ImageSimilarityMatrix&amp;, rootNode: int, treeSize: int, threshold: float)
size(): int
getMST(): tree&lt;int&gt;
build(ism: const ImageSimilarityMatrix&amp;, rootNode: int, treeSize:int, threshold: float)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>0</x>
      <y>528</y>
      <w>408</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>ImageSimilarityMatrix
--
imageSimilarityMatrix: Mat
--
ImageSimilarityMatrix()
ImageSimilarityMatrix(m: const ImageSimilarityMatrix&amp;)
ImageSimilarityMatrix(frames: const vector&lt;Frame*&gt;&amp;)

buildImageSimilarityMatrix(frames: const vector&lt;Frame*&gt;&amp;)
buildMaskSimilarityMatrix(frames: const vector&lt;Frame*&gt;&amp;)

size(): int
min(): float
max(): float
mean(): float
at(row: int, col: int): float
getPathCost(path: vector&lt;int&gt;): float
operator==(s: const ImageSimilarityMatrix&amp;): bool
operator!=(s: const ImageSimilarityMatrix&amp;): bool
operator=(s: const ImageSimilarityMatrix&amp;): ImageSimilarityMatrix&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>880</x>
      <y>1208</y>
      <w>592</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>576;24;24;264</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1440</x>
      <y>1208</y>
      <w>48</w>
      <h>392</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>24;24;32;376</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1456</x>
      <y>1208</y>
      <w>448</w>
      <h>392</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>24;24;432;376</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>992</x>
      <y>200</y>
      <w>400</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>PoseHelper
--
--
+distSquared(one: T, two: T): double
+angle2D(x1: double, y1: double, x2: double, y2: double): double;
+rotatePoint2D(point: T, pivot: T, degrees: float): T</panel_attributes>
    <additional_attributes/>
  </element>
  <group>
    <element>
      <type>com.umlet.element.Package</type>
      <coordinates>
        <x>16</x>
        <y>1152</y>
        <w>568</w>
        <h>680</h>
      </coordinates>
      <panel_attributes>*Skeletal Structure*
bg=orange</panel_attributes>
      <additional_attributes/>
    </element>
    <element>
      <type>com.umlet.element.Class</type>
      <coordinates>
        <x>32</x>
        <y>1176</y>
        <w>544</w>
        <h>352</h>
      </coordinates>
      <panel_attributes>BodyPart
--
+partId: int
+partName: string
+parentJoint: BodyJoint*
+childJoint: BodyJoint*
+isOccluded: bool
+spaceLength: float 
+partPolygon: POSERECT &lt;Point2f&gt;
--
+BodyPart()
+BodyPart(id: int, name: string, pJoint: BodyJoint*, cJoint: BodyJoint*, isOcc: bool, spaceLeng: float)
+getPartID(): int
+setPartID(_partID: int)
+getPartName(): string;
+setPartName(_partName: string)
+getParentJoint(): BodyJoint*
+setParentJoint(_parentJoint: BodyJoint*)
+getChildJoint(): BodyJoint*
+setChildJoint(_childJoint: BodyJoint*)
+getIsOccluded(): bool
+setIsOccluded(_isOccluded: bool)
+getSpaceLength(): float
+setSpaceLength(_spaceLength: float)
+getPartPolygon(): POSERECT &lt;Point2f&gt;
+setPartPolygon(_partPolygon: POSERECT &lt;Point2f&gt;)
+operator==: bool
+operator!=: bool
</panel_attributes>
      <additional_attributes/>
    </element>
    <element>
      <type>com.umlet.element.Class</type>
      <coordinates>
        <x>32</x>
        <y>1544</y>
        <w>544</w>
        <h>272</h>
      </coordinates>
      <panel_attributes>BodyJoint
--
+limbId: int
+jointName: string
+imageLocation: cv:Point2f
+spaceLocation: cv:Point3f
+depthSign: bool
--
+BodyJoint()
+BodyJoint(id: int, name: string, imgLoc: Point2f, spaceLoc: Point, depth: bool)
+getLimbID(): int
+setLimbID(_limbID: int)
+getJointName(): string
+setJointName(_jointName: string)
+getImageLocation(): Point2f
+setImageLocation(_imageLocation: Point2f)
+getSpaceLocation(): Point3f
+setSpaceLocation(_spaceLocation: Point3f)
+getDepthSign(): bool
+setDepthSign(_depthSign: bool)
+operator==: bool
+operator!=: bool</panel_attributes>
      <additional_attributes/>
    </element>
  </group>
  <group>
    <element>
      <type>com.umlet.element.Class</type>
      <coordinates>
        <x>256</x>
        <y>1896</y>
        <w>288</w>
        <h>272</h>
      </coordinates>
      <panel_attributes>/Frame/
--
-id: int
-image: cv:Mat 
-mask: cv:Mat
-skeleton: Skeleton
-groundPoint: Point2f
--
+Frame()
+~Frame()
+getPartPolygon(partId: int): vector&lt;cv:Point2f&gt;
+getID(): int
+setID(_id: int)
+getImage(): Mat
+setImage(_image: Mat)
+getMask(): Mat
+setMask(_mask: Mat)
+getSkeleton(): Skeleton
+setSkeleton(_skeleton: Skeleton)
+getGroundPoint(): Point2f
+setGroundPoint(_groundPoint: Point2f)
/+getFrametype(): FRAMETYPE/</panel_attributes>
      <additional_attributes/>
    </element>
    <element>
      <type>com.umlet.element.Class</type>
      <coordinates>
        <x>16</x>
        <y>2192</y>
        <w>248</w>
        <h>88</h>
      </coordinates>
      <panel_attributes>Keyframe
--
+frameType: FRAMETYPE
--
+Keyframe()
+getFrametype(): FRAMETYPE</panel_attributes>
      <additional_attributes/>
    </element>
    <element>
      <type>com.umlet.element.Class</type>
      <coordinates>
        <x>272</x>
        <y>2192</y>
        <w>248</w>
        <h>88</h>
      </coordinates>
      <panel_attributes>Interpolation
--
+frameType: FRAMETYPE
--
+Interpolation()
+getFrametype(): FRAMETYPE</panel_attributes>
      <additional_attributes/>
    </element>
    <element>
      <type>com.umlet.element.Class</type>
      <coordinates>
        <x>528</x>
        <y>2192</y>
        <w>248</w>
        <h>88</h>
      </coordinates>
      <panel_attributes>Lockframe
--
+frameType: FRAMETYPE
--
+Lockframe()
+getFrametype(): FRAMETYPE</panel_attributes>
      <additional_attributes/>
    </element>
    <element>
      <type>com.umlet.element.Relation</type>
      <coordinates>
        <x>392</x>
        <y>2144</y>
        <w>192</w>
        <h>64</h>
      </coordinates>
      <panel_attributes>lt=&lt;&lt;.</panel_attributes>
      <additional_attributes>24;24;176;48</additional_attributes>
    </element>
    <element>
      <type>com.umlet.element.Relation</type>
      <coordinates>
        <x>368</x>
        <y>2144</y>
        <w>112</w>
        <h>64</h>
      </coordinates>
      <panel_attributes>lt=&lt;&lt;.</panel_attributes>
      <additional_attributes>24;24;96;48</additional_attributes>
    </element>
    <element>
      <type>com.umlet.element.Relation</type>
      <coordinates>
        <x>24</x>
        <y>2144</y>
        <w>368</w>
        <h>64</h>
      </coordinates>
      <panel_attributes>lt=&lt;&lt;.</panel_attributes>
      <additional_attributes>352;24;24;48</additional_attributes>
    </element>
  </group>
  <group>
    <element>
      <type>com.umlet.element.Package</type>
      <coordinates>
        <x>600</x>
        <y>880</y>
        <w>592</w>
        <h>568</h>
      </coordinates>
      <panel_attributes>*Part Labelling*
bg=orange</panel_attributes>
      <additional_attributes/>
    </element>
    <element>
      <type>com.umlet.element.Class</type>
      <coordinates>
        <x>608</x>
        <y>1248</y>
        <w>192</w>
        <h>192</h>
      </coordinates>
      <panel_attributes>Score
--
+score: float
+detName: string
--
+Score()
+Score(sc: float, name: string)
+operator=: Score&amp;
+operator==: bool
+operator!=: bool
+operator&lt;: bool
+operator&gt;: bool
+getScore(): float
+setScore(_score: float)
+getDetName(): string
+setDetName(_detName: string)</panel_attributes>
      <additional_attributes/>
    </element>
    <element>
      <type>com.umlet.element.Class</type>
      <coordinates>
        <x>608</x>
        <y>904</y>
        <w>568</w>
        <h>336</h>
      </coordinates>
      <panel_attributes>LimbLabel
--
+limbId: int
+center: cv:Point2f
+angle: float
+polygon: vector&lt;Point2f&gt;
+scores: vector&lt;Score&gt;
+isWeak: bool
+isOccluded: bool
--
+LimbLabel()
+LimbLabel(_id:int, _centre: Point2f, _angle: float, _polygon: vector&lt;Point2f&gt;, _scores: vector&lt;Score&gt;)
+addScore(detectionScore: Score)
+getScores(): vector&lt;Score&gt;
+getEndPoints(p0: Point2f&amp;, p1: Point2f&amp;)
+getCenter(): Point2f
+getLimbID(): int
+getAngle(): float
+getPolygon(): vector &lt;Point2f&gt;
+getIsOccluded(): bool
+getIsWeak(): bool
+getSumScore(): float;
+operator=: Score&amp;
+operator==: bool
+operator!=: bool
+operator&lt;:bool
+operator&gt;:bool
</panel_attributes>
      <additional_attributes/>
    </element>
  </group>
  <group>
    <element>
      <type>com.umlet.element.Class</type>
      <coordinates>
        <x>608</x>
        <y>1912</y>
        <w>552</w>
        <h>112</h>
      </coordinates>
      <panel_attributes>PartModel
--
+nBins: byte
+partHistogramm: vector&lt;vector&lt;vector&lt;float\&gt;&gt;&gt;
+sizeFg: int
+uniqueExists: bool
+fgNumSamples: int
+fgSampleSizes: vector&lt;int&gt;
+gfBlankSizes: vector&lt;int&gt;

</panel_attributes>
      <additional_attributes/>
    </element>
    <element>
      <type>com.umlet.element.Class</type>
      <coordinates>
        <x>608</x>
        <y>1584</y>
        <w>624</w>
        <h>304</h>
      </coordinates>
      <panel_attributes>ColorHistDetector
--
+nBins: byte
+partModels: vector &lt;PartModel&gt;
--
+ColorHistDetector()
+getId(): int
+setId(int _id) 
+train(_frames: vector&lt;Frame&gt;, params: map&lt;string, float&gt;)
+detect(frame: Frame*, params: map&lt;string, float&gt;): vector&lt;vector&lt;LimbLabel&gt; &gt;
+getNBins(): byte
+computePixelBelongingLikelihood(partModel: PartModel&amp;, r: byte, g: byte, b: byte): float
+setPartHistogramm(partModel: PartModel&amp;, partColors: vector &lt;Point3i&gt;&amp;)
+addPartHistogramm(partModel: PartModel&amp;, partColors: vector &lt;Point3i&gt;&amp;, nBlankPixels: int)
+addBackgroundHistogramm(partModel: PartModel&amp;, bgColors: vector &lt;Point3i&gt;)
+getAvgSampleSizeFg(partModel: PartModel&amp;): float
+getAvgSampleSizeFgBetween(partModel: PartModel&amp;, s1: int, s2: int): float
+matchPartHistogramsED(partModelPrev: PartModel&amp;, partModel: PartModel&amp;): float
+buildPixelDistributions(frame: Frame*): map &lt;int, Mat&gt;
+buildPixelLabels(frame: Frame*, pixelDistributions: map&lt;int, Mat&gt;): map &lt;int, Mat&gt;
+generateLabel(bodyPart: BodyPart, frame: Frame, pixelDistributions: map &lt;int, Mat&gt;, pixelLabels: map &lt;int, Mat&gt;, j0: Point2f, j1 : Point2f): LimbLabel</panel_attributes>
      <additional_attributes/>
    </element>
    <element>
      <type>com.umlet.element.Note</type>
      <coordinates>
        <x>608</x>
        <y>1496</y>
        <w>552</w>
        <h>56</h>
      </coordinates>
      <panel_attributes>*Potentially to remove *
-- fgNumSamples contain duplicated data that can be accessed 
   from fgSampleSizes.size()
bg=yellow</panel_attributes>
      <additional_attributes/>
    </element>
    <element>
      <type>com.umlet.element.Package</type>
      <coordinates>
        <x>600</x>
        <y>1456</y>
        <w>648</w>
        <h>608</h>
      </coordinates>
      <panel_attributes>bg=orange</panel_attributes>
      <additional_attributes/>
    </element>
  </group>
</diagram>
