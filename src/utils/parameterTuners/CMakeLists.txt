# Configure modules path
SET ( MODULE_PATH "${${PROJECT_NAME}_SOURCE_DIR}/cmake" )
INCLUDE ( "${MODULE_PATH}/modules.cmake" )

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}" )
INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/${SPEL_MODULE}" )

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}" )
IF ( GOOGLE_TEST AND GOOGLE_TEST_PATH )
  INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/${GOOGLE_TEST_PATH}/include" )
ENDIF()

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}" )

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/utils/general" )

# general
LIST ( APPEND GENERAL_SRC ../general/projectLoader.cpp )
LIST ( APPEND GENERAL_HDR ../general/projectLoader.hpp )

# additional files
LIST ( APPEND ${DETECTORTUNER_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${DETECTORTUNER_MODULE}_SRC detectorTuner.cpp )

LIST ( APPEND ${DETECTORTUNER_MODULE}_LNK ${SPEL_MODULE} )
LIST ( APPEND ${DETECTORTUNER_MODULE}_LNK ${OpenCV_LIBS} )
LIST ( APPEND ${DETECTORTUNER_MODULE}_LNK ${HDF5_LIBRARIES} )
IF ( UNIX AND MEMORY_DEBUG )
  LIST ( APPEND ${DETECTORTUNER_MODULE}_LNK ${LibCWD_LIBRARIES} )
ENDIF ()
IF ( UNIX )
  LIST ( APPEND ${DETECTORTUNER_MODULE}_LNK uuid )
ELSEIF ( WIN32 )
  LIST ( APPEND ${DETECTORTUNER_MODULE}_LNK rpcrt4 )
ENDIF()

LIST ( APPEND ${SOLVERTUNER_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${SOLVERTUNER_MODULE}_SRC solverTuner.cpp )

LIST ( APPEND ${SOLVERTUNER_MODULE}_LNK ${SPEL_MODULE} )
LIST ( APPEND ${SOLVERTUNER_MODULE}_LNK ${OpenCV_LIBS} )
LIST ( APPEND ${SOLVERTUNER_MODULE}_LNK ${HDF5_LIBRARIES} )
IF ( UNIX AND MEMORY_DEBUG )
  LIST ( APPEND ${SOLVERTUNER_MODULE}_LNK ${LibCWD_LIBRARIES} )
ENDIF ()
IF ( UNIX )
  LIST ( APPEND ${SOLVERTUNER_MODULE}_LNK uuid )
ELSEIF ( WIN32 )
  LIST ( APPEND ${SOLVERTUNER_MODULE}_LNK rpcrt4 )
ENDIF()

ADD_EXECUTABLE ( ${DETECTORTUNER_MODULE} ${${DETECTORTUNER_MODULE}_SRC} ${GENERAL_SRC} ${GENERAL_HDR} )
ADD_EXECUTABLE ( ${SOLVERTUNER_MODULE} ${${SOLVERTUNER_MODULE}_SRC} ${GENERAL_SRC} ${GENERAL_HDR} )

# TODO: Library names should be taken from variables
TARGET_LINK_LIBRARIES ( ${DETECTORTUNER_MODULE} ${${DETECTORTUNER_MODULE}_LNK} )
TARGET_LINK_LIBRARIES ( ${SOLVERTUNER_MODULE} ${${SOLVERTUNER_MODULE}_LNK} )

# Installation instructions for the test module
# Please specify the installation instructions sprcific
# To the architecture the project is being built for.

IF ( UNIX )
	INSTALL (
		TARGETS ${DETECTORTUNER_MODULE} ${SOLVERTUNER_MODULE}
		RUNTIME DESTINATION bin/
		LIBRARY DESTINATION lib/${PROJECT_NAME}
		ARCHIVE DESTINATION lib/static/${PROJECT_NAME}
	)
ELSEIF ( WIN32 )
	INSTALL (
		TARGETS ${DETECTORTUNER_MODULE} ${SOLVERTUNER_MODULE}
		RUNTIME DESTINATION bin/
		LIBRARY DESTINATION lib/
		ARCHIVE DESTINATION lib/static/
	)
ENDIF()

