# Configure modules path
SET ( MODULE_PATH "${${PROJECT_NAME}_SOURCE_DIR}/cmake" )
INCLUDE ( "${MODULE_PATH}/modules.cmake" )

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}" )
INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/${LIBPOSE_MODULE}" )

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}" )
IF ( GOOGLE_TEST AND GOOGLE_TEST_PATH )
  INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/${GOOGLE_TEST_PATH}/include" )
ENDIF()

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}" )
INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/utils/general" )

# additional files
LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_SRC colorHistDetectorTest )
LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_SRC ../general/projectLoader )

LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_LNK ${LIBPOSE_MODULE} )
LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_LNK ${OpenCV_LIBS} )

LIST ( APPEND ${HOGDETECTORTEST_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${HOGDETECTORTEST_MODULE}_SRC hogDetectorTest )
LIST ( APPEND ${HOGDETECTORTEST_MODULE}_SRC ../general/projectLoader )

LIST ( APPEND ${HOGDETECTORTEST_MODULE}_LNK ${LIBPOSE_MODULE} )
LIST ( APPEND ${HOGDETECTORTEST_MODULE}_LNK ${OpenCV_LIBS} )

LIST ( APPEND ${SURFDETECTORTEST_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${SURFDETECTORTEST_MODULE}_SRC surfDetectorTest )
LIST ( APPEND ${SURFDETECTORTEST_MODULE}_SRC ../general/projectLoader )

LIST ( APPEND ${SURFDETECTORTEST_MODULE}_LNK ${LIBPOSE_MODULE} )
LIST ( APPEND ${SURFDETECTORTEST_MODULE}_LNK ${OpenCV_LIBS} )

LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_SRC mixedDetectorsTest )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_SRC ../general/projectLoader )

LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_LNK ${LIBPOSE_MODULE} )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_LNK ${OpenCV_LIBS} )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_LNK ${HDF5_LIBRARIES} )

ADD_EXECUTABLE ( ${COLORHISTDETECTORTEST_MODULE} ${${COLORHISTDETECTORTEST_MODULE}_SRC} )
ADD_EXECUTABLE ( ${HOGDETECTORTEST_MODULE} ${${HOGDETECTORTEST_MODULE}_SRC} )
ADD_EXECUTABLE ( ${SURFDETECTORTEST_MODULE} ${${SURFDETECTORTEST_MODULE}_SRC} )
ADD_EXECUTABLE ( ${MIXEDDETECTORSTEST_MODULE} ${${MIXEDDETECTORSTEST_MODULE}_SRC} )

# TODO: Library names should be taken from variables
TARGET_LINK_LIBRARIES ( ${COLORHISTDETECTORTEST_MODULE} ${${COLORHISTDETECTORTEST_MODULE}_LNK} )
TARGET_LINK_LIBRARIES ( ${HOGDETECTORTEST_MODULE} ${${HOGDETECTORTEST_MODULE}_LNK} )
TARGET_LINK_LIBRARIES ( ${SURFDETECTORTEST_MODULE} ${${SURFDETECTORTEST_MODULE}_LNK} )
TARGET_LINK_LIBRARIES ( ${MIXEDDETECTORSTEST_MODULE} ${${MIXEDDETECTORSTEST_MODULE}_LNK} )

ADD_CUSTOM_COMMAND ( TARGET ${COLORHISTDETECTORTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/utils/general/testdata1 $<TARGET_FILE_DIR:${COLORHISTDETECTORTEST_MODULE}>/${COLORHISTDETECTORTEST_MODULE}_TestData/testdata1 )
ADD_CUSTOM_COMMAND ( TARGET ${HOGDETECTORTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/utils/general/testdata1 $<TARGET_FILE_DIR:${HOGDETECTORTEST_MODULE}>/${HOGDETECTORTEST_MODULE}_TestData/testdata1 )
ADD_CUSTOM_COMMAND ( TARGET ${SURFDETECTORTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/utils/general/testdata1 $<TARGET_FILE_DIR:${SURFDETECTORTEST_MODULE}>/${SURFDETECTORTEST_MODULE}_TestData/testdata1 )
ADD_CUSTOM_COMMAND ( TARGET ${MIXEDDETECTORSTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/utils/general/testdata1 $<TARGET_FILE_DIR:${MIXEDDETECTORSTEST_MODULE}>/${MIXEDDETECTORSTEST_MODULE}_TestData/testdata1 )
# Installation instructions for the test module
# Please specify the installation instructions sprcific
# To the architecture the project is being built for.

IF ( UNIX )
	INSTALL (
		TARGETS ${COLORHISTDETECTORTEST_MODULE} ${HOGDETECTORTEST_MODULE} ${SURFDETECTORTEST_MODULE} ${MIXEDDETECTORSTEST_MODULE}
		RUNTIME DESTINATION bin/${ROOT_PROJECT_NAME}
		LIBRARY DESTINATION lib/${ROOT_PROJECT_NAME}
		ARCHIVE DESTINATION lib/static/${ROOT_PROJECT_NAME}
	)
ELSEIF ( WIN32 )
	INSTALL (
		TARGETS ${COLORHISTDETECTORTEST_MODULE} ${HOGDETECTORTEST_MODULE} ${SURFDETECTORTEST_MODULE} ${MIXEDDETECTORSTEST_MODULE}
		RUNTIME DESTINATION bin/
		LIBRARY DESTINATION lib/
		ARCHIVE DESTINATION lib/static/
	)
ENDIF()

