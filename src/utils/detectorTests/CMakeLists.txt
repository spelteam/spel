# Configure modules path
SET ( MODULE_PATH "${${PROJECT_NAME}_SOURCE_DIR}/cmake" )
INCLUDE ( "${MODULE_PATH}/modules.cmake" )

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}" )
INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/${SPEL_MODULE}" )

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}" )
IF ( GOOGLE_TEST AND GOOGLE_TEST_PATH )
  INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/${GOOGLE_TEST_PATH}/include" )
ENDIF()

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}" )
INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/utils/general" )

# general
LIST ( APPEND GENERAL_SRC ../general/projectLoader.cpp )
LIST ( APPEND GENERAL_SRC ../general/projectRunner.cpp )
LIST ( APPEND GENERAL_HDR ../general/projectLoader.hpp )
LIST ( APPEND GENERAL_HDR ../general/projectRunner.hpp )

# additional files
LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_SRC colorHistDetectorTest.cpp )
LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_SRC colorHistDetectorTestExec.cpp )
LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_HDR colorHistDetectorTest.hpp )

LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_LNK ${SPEL_MODULE} )
LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_LNK ${OpenCV_LIBS} )
IF ( UNIX AND MEMORY_DEBUG )
  LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_LNK ${LibCWD_LIBRARIES} )
ENDIF ()
IF ( UNIX )
  LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_LNK uuid )
ELSEIF ( WIN32 )
  LIST ( APPEND ${COLORHISTDETECTORTEST_MODULE}_LNK rpcrt4 )
ENDIF()

LIST ( APPEND ${HOGDETECTORTEST_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${HOGDETECTORTEST_MODULE}_SRC hogDetectorTest.cpp )
LIST ( APPEND ${HOGDETECTORTEST_MODULE}_HDR hogDetectorTest.hpp )
LIST ( APPEND ${HOGDETECTORTEST_MODULE}_SRC hogDetectorTestExec.cpp )

LIST ( APPEND ${HOGDETECTORTEST_MODULE}_LNK ${SPEL_MODULE} )
LIST ( APPEND ${HOGDETECTORTEST_MODULE}_LNK ${OpenCV_LIBS} )
IF ( UNIX AND MEMORY_DEBUG )
  LIST ( APPEND ${HOGDETECTORTEST_MODULE}_LNK ${LibCWD_LIBRARIES} )
ENDIF ()
IF ( UNIX )
  LIST ( APPEND ${HOGDETECTORTEST_MODULE}_LNK uuid )
ELSEIF ( WIN32 )
  LIST ( APPEND ${HOGDETECTORTEST_MODULE}_LNK rpcrt4 )
ENDIF()

LIST ( APPEND ${SURFDETECTORTEST_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${SURFDETECTORTEST_MODULE}_SRC surfDetectorTest.cpp )
LIST ( APPEND ${SURFDETECTORTEST_MODULE}_HDR surfDetectorTest.hpp )
LIST ( APPEND ${SURFDETECTORTEST_MODULE}_SRC surfDetectorTestExec.cpp )

LIST ( APPEND ${SURFDETECTORTEST_MODULE}_LNK ${SPEL_MODULE} )
LIST ( APPEND ${SURFDETECTORTEST_MODULE}_LNK ${OpenCV_LIBS} )
IF ( UNIX AND MEMORY_DEBUG )
  LIST ( APPEND ${SURFDETECTORTEST_MODULE}_LNK ${LibCWD_LIBRARIES} )
ENDIF ()
IF ( UNIX )
  LIST ( APPEND ${SURFDETECTORTEST_MODULE}_LNK uuid )
ELSEIF ( WIN32 )
  LIST ( APPEND ${SURFDETECTORTEST_MODULE}_LNK rpcrt4 )
ENDIF()

LIST ( APPEND ${SURFDETECTOR2TEST_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${SURFDETECTOR2TEST_MODULE}_SRC SURFDetector2Test.cpp )
LIST ( APPEND ${SURFDETECTOR2TEST_MODULE}_HDR SURFDetector2Test.hpp )
LIST ( APPEND ${SURFDETECTOR2TEST_MODULE}_SRC SURFDetector2TestExec.cpp )

LIST ( APPEND ${SURFDETECTOR2TEST_MODULE}_LNK ${SPEL_MODULE} )
LIST ( APPEND ${SURFDETECTOR2TEST_MODULE}_LNK ${OpenCV_LIBS} )
IF ( UNIX AND MEMORY_DEBUG )
  LIST ( APPEND ${SURFDETECTOR2TEST_MODULE}_LNK ${LibCWD_LIBRARIES} )
ENDIF ()
IF ( UNIX )
  LIST ( APPEND ${SURFDETECTOR2TEST_MODULE}_LNK uuid )
ELSEIF ( WIN32 )
  LIST ( APPEND ${SURFDETECTOR2TEST_MODULE}_LNK rpcrt4 )
ENDIF()

LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_SRC mixedDetectorsTestExec.cpp )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_SRC colorHistDetectorTest.cpp )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_SRC hogDetectorTest.cpp )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_SRC surfDetectorTest.cpp )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_SRC SURFDetector2Test.cpp )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_HDR colorHistDetectorTest.hpp )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_HDR hogDetectorTest.hpp )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_HDR surfDetectorTest.hpp )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_HDR SURFDetector2Test.hpp )

LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_LNK ${SPEL_MODULE} )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_LNK ${OpenCV_LIBS} )
LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_LNK ${HDF5_LIBRARIES} )
IF ( UNIX AND MEMORY_DEBUG )
  LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_LNK ${LibCWD_LIBRARIES} )
ENDIF ()
IF ( UNIX )
  LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_LNK uuid )
ELSEIF ( WIN32 )
  LIST ( APPEND ${MIXEDDETECTORSTEST_MODULE}_LNK rpcrt4 )
ENDIF()

ADD_EXECUTABLE ( ${COLORHISTDETECTORTEST_MODULE} ${${COLORHISTDETECTORTEST_MODULE}_SRC} ${${COLORHISTDETECTORTEST_MODULE}_HDR} ${GENERAL_SRC} ${GENERAL_HDR} )
ADD_EXECUTABLE ( ${HOGDETECTORTEST_MODULE} ${${HOGDETECTORTEST_MODULE}_SRC} ${${HOGDETECTORTEST_MODULE}_HDR} ${GENERAL_SRC} ${GENERAL_HDR} )
ADD_EXECUTABLE ( ${SURFDETECTORTEST_MODULE} ${${SURFDETECTORTEST_MODULE}_SRC} ${${SURFDETECTORTEST_MODULE}_HDR} ${GENERAL_SRC} ${GENERAL_HDR} )
ADD_EXECUTABLE ( ${SURFDETECTOR2TEST_MODULE} ${${SURFDETECTOR2TEST_MODULE}_SRC} ${${SURFDETECTOR2TEST_MODULE}_HDR} ${GENERAL_SRC} ${GENERAL_HDR} )
ADD_EXECUTABLE ( ${MIXEDDETECTORSTEST_MODULE} ${${MIXEDDETECTORSTEST_MODULE}_SRC} ${${MIXEDDETECTORSTEST_MODULE}_HDR}  ${GENERAL_SRC} ${GENERAL_HDR} )

# TODO: Library names should be taken from variables
TARGET_LINK_LIBRARIES ( ${COLORHISTDETECTORTEST_MODULE} ${${COLORHISTDETECTORTEST_MODULE}_LNK} )
TARGET_LINK_LIBRARIES ( ${HOGDETECTORTEST_MODULE} ${${HOGDETECTORTEST_MODULE}_LNK} )
TARGET_LINK_LIBRARIES ( ${SURFDETECTORTEST_MODULE} ${${SURFDETECTORTEST_MODULE}_LNK} )
TARGET_LINK_LIBRARIES ( ${SURFDETECTOR2TEST_MODULE} ${${SURFDETECTOR2TEST_MODULE}_LNK} )
TARGET_LINK_LIBRARIES ( ${MIXEDDETECTORSTEST_MODULE} ${${MIXEDDETECTORSTEST_MODULE}_LNK} )

ADD_CUSTOM_COMMAND ( TARGET ${COLORHISTDETECTORTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata1 $<TARGET_FILE_DIR:${COLORHISTDETECTORTEST_MODULE}>/${COLORHISTDETECTORTEST_MODULE}_TestData/testdata1 )
ADD_CUSTOM_COMMAND ( TARGET ${COLORHISTDETECTORTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata2 $<TARGET_FILE_DIR:${COLORHISTDETECTORTEST_MODULE}>/${COLORHISTDETECTORTEST_MODULE}_TestData/testdata2 )
ADD_CUSTOM_COMMAND ( TARGET ${COLORHISTDETECTORTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata3 $<TARGET_FILE_DIR:${COLORHISTDETECTORTEST_MODULE}>/${COLORHISTDETECTORTEST_MODULE}_TestData/testdata3 )

ADD_CUSTOM_COMMAND ( TARGET ${HOGDETECTORTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata1 $<TARGET_FILE_DIR:${HOGDETECTORTEST_MODULE}>/${HOGDETECTORTEST_MODULE}_TestData/testdata1 )
ADD_CUSTOM_COMMAND ( TARGET ${HOGDETECTORTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata2 $<TARGET_FILE_DIR:${HOGDETECTORTEST_MODULE}>/${HOGDETECTORTEST_MODULE}_TestData/testdata2 )
ADD_CUSTOM_COMMAND ( TARGET ${HOGDETECTORTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata3 $<TARGET_FILE_DIR:${HOGDETECTORTEST_MODULE}>/${HOGDETECTORTEST_MODULE}_TestData/testdata3 )

ADD_CUSTOM_COMMAND ( TARGET ${SURFDETECTORTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata1 $<TARGET_FILE_DIR:${SURFDETECTORTEST_MODULE}>/${SURFDETECTORTEST_MODULE}_TestData/testdata1 )
ADD_CUSTOM_COMMAND ( TARGET ${SURFDETECTORTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata2 $<TARGET_FILE_DIR:${SURFDETECTORTEST_MODULE}>/${SURFDETECTORTEST_MODULE}_TestData/testdata2 )
ADD_CUSTOM_COMMAND ( TARGET ${SURFDETECTORTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata3 $<TARGET_FILE_DIR:${SURFDETECTORTEST_MODULE}>/${SURFDETECTORTEST_MODULE}_TestData/testdata3 )

ADD_CUSTOM_COMMAND ( TARGET ${SURFDETECTOR2TEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata1 $<TARGET_FILE_DIR:${SURFDETECTOR2TEST_MODULE}>/${SURFDETECTOR2TEST_MODULE}_TestData/testdata1 )
ADD_CUSTOM_COMMAND ( TARGET ${SURFDETECTOR2TEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata2 $<TARGET_FILE_DIR:${SURFDETECTOR2TEST_MODULE}>/${SURFDETECTOR2TEST_MODULE}_TestData/testdata2 )
ADD_CUSTOM_COMMAND ( TARGET ${SURFDETECTOR2TEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata3 $<TARGET_FILE_DIR:${SURFDETECTOR2TEST_MODULE}>/${SURFDETECTOR2TEST_MODULE}_TestData/testdata3 )

ADD_CUSTOM_COMMAND ( TARGET ${MIXEDDETECTORSTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata1 $<TARGET_FILE_DIR:${MIXEDDETECTORSTEST_MODULE}>/${MIXEDDETECTORSTEST_MODULE}_TestData/testdata1 )
ADD_CUSTOM_COMMAND ( TARGET ${MIXEDDETECTORSTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata2 $<TARGET_FILE_DIR:${MIXEDDETECTORSTEST_MODULE}>/${MIXEDDETECTORSTEST_MODULE}_TestData/testdata2 )
ADD_CUSTOM_COMMAND ( TARGET ${MIXEDDETECTORSTEST_MODULE} PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory ${${PROJECT_NAME}_SOURCE_DIR}/tests/testdata3 $<TARGET_FILE_DIR:${MIXEDDETECTORSTEST_MODULE}>/${MIXEDDETECTORSTEST_MODULE}_TestData/testdata3 )

# Installation instructions for the test module
# Please specify the installation instructions sprcific
# To the architecture the project is being built for.

IF ( UNIX )
	INSTALL (
		TARGETS ${COLORHISTDETECTORTEST_MODULE} ${HOGDETECTORTEST_MODULE} ${SURFDETECTORTEST_MODULE} ${SURFDETECTOR2TEST_MODULE} ${MIXEDDETECTORSTEST_MODULE}
		RUNTIME DESTINATION bin/
		LIBRARY DESTINATION lib/${PROJECT_NAME}
		ARCHIVE DESTINATION lib/static/${PROJECT_NAME}
	)
ELSEIF ( WIN32 )
	INSTALL (
		TARGETS ${COLORHISTDETECTORTEST_MODULE} ${HOGDETECTORTEST_MODULE} ${SURFDETECTORTEST_MODULE} ${SURFDETECTOR2TEST_MODULE} ${MIXEDDETECTORSTEST_MODULE}
		RUNTIME DESTINATION bin/
		LIBRARY DESTINATION lib/
		ARCHIVE DESTINATION lib/static/
	)
ENDIF()

